//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.22 at 03:02:30 AM MSK 
//

package org.qqq175.xml.data;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="stemColor" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="leafColor" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="flowerColor" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="size" use="required">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *             &lt;minExclusive value="0"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "visualParameters")
public class VisualParameters {

	@XmlAttribute(name = "stemColor", required = true)
	private String stemColor;
	@XmlAttribute(name = "leafColor")
	private String leafColor;
	@XmlAttribute(name = "flowerColor")
	private String flowerColor;
	@XmlAttribute(name = "size", required = true)
	private int size;

	/**
	 * Gets the value of the stemColor property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getStemColor() {
		return stemColor;
	}

	/**
	 * Sets the value of the stemColor property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setStemColor(String value) {
		this.stemColor = value;
	}

	/**
	 * Gets the value of the leafColor property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getLeafColor() {
		return leafColor;
	}

	/**
	 * Sets the value of the leafColor property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setLeafColor(String value) {
		this.leafColor = value;
	}

	/**
	 * Gets the value of the flowerColor property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getFlowerColor() {
		return flowerColor;
	}

	/**
	 * Sets the value of the flowerColor property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setFlowerColor(String value) {
		this.flowerColor = value;
	}

	/**
	 * Gets the value of the size property.
	 * 
	 */
	public int getSize() {
		return size;
	}

	/**
	 * Sets the value of the size property.
	 * 
	 */
	public void setSize(int value) {
		this.size = value;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((flowerColor == null) ? 0 : flowerColor.hashCode());
		result = prime * result + ((leafColor == null) ? 0 : leafColor.hashCode());
		result = prime * result + size;
		result = prime * result + ((stemColor == null) ? 0 : stemColor.hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		VisualParameters other = (VisualParameters) obj;
		if (flowerColor == null) {
			if (other.flowerColor != null)
				return false;
		} else if (!flowerColor.equals(other.flowerColor))
			return false;
		if (leafColor == null) {
			if (other.leafColor != null)
				return false;
		} else if (!leafColor.equals(other.leafColor))
			return false;
		if (size != other.size)
			return false;
		if (stemColor == null) {
			if (other.stemColor != null)
				return false;
		} else if (!stemColor.equals(other.stemColor))
			return false;
		return true;
	}

}
